version: '3.3'

services:
    webserver:
        build:
            context: webserver/
        # command: flask run --host=0.0.0.0
        command: "gunicorn --bind=0.0.0.0:5000 wsgi:application"
        environment:
            FLASK_APP: wsgi.py
            FLASK_ENV: development
        ports:
            - "5000:5000"
        networks:
            - stock_network
        depends_on:
            - db

    db:
        build:
            context: database/
        environment:
            POSTGRES_PASSWORD: postgres
            POSTGRES_USER: postgres
            POSTGRES_DB: db
        volumes:
            - pgdata:/var/lib/postgresql/data/
        ports:
            - "5432:5432"
        networks:
            - stock_network

    tfserving:
        image: tensorflow/serving
        command:
            - "--model_config_file_poll_wait_seconds=60"
        environment:
            MODEL_NAME: stocknet
        ports:
            - "8501:8501"
        volumes:
            - type: bind
            #   source: mlmodel
              source: ${PWD}/ml_app/stocknet
              target: /models/stocknet
        networks:
            - stock_network


    # predict_api:
    #     build:
    #         context: ml_inference/


    pgadmin:
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-user@email.com}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-user}
        ports:
            - "5050:80"
        volumes:
            - pgadmin:/root/.pgadmin
        networks:
            - stock_network

volumes:
    pgdata:
    pgadmin:
    mlmodel:

networks:
    stock_network:
        driver: bridge

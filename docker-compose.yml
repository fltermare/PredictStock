version: '3.3'

services:
    webserver:
        build:
            context: webserver/
        # command: flask run --host=0.0.0.0
        command: "gunicorn --bind=0.0.0.0:5000 wsgi:application"
        environment:
            FLASK_APP: wsgi.py
            FLASK_ENV: development
        ports:
            - "5000:5000"
        networks:
            - stock_network
        depends_on:
            - db

    db:
        build:
            context: database/
        environment:
            POSTGRES_PASSWORD: postgres
            POSTGRES_USER: postgres
            POSTGRES_DB: db
        volumes:
            - pgdata:/var/lib/postgresql/data/
        ports:
            - "5432:5432"
        networks:
            - stock_network

    tfserving:
        image: tensorflow/serving
        command:
            - "--model_config_file_poll_wait_seconds=5"
        environment:
            MODEL_NAME: stocknet
        ports:
            - "8501:8501"
        volumes:
            - type: volume
              source: mlmodel_vol
              target: /models
            # - type: bind
            #   source: ${PWD}/ml_train/stocknet
            #   target: /models/stocknet
        networks:
            - stock_network
        # depends_on:
            # - train_ml

    train_ml:
        build:
            context: ml_train/
        command: "gunicorn --bind=0.0.0.0:8000 -k uvicorn.workers.UvicornWorker main:app"
        # command: "uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
        ports:
            - "8000:8000"
        volumes:
            - type: volume
              source: mlmodel_vol
              target: /models
        networks:
            - stock_network

    predict_api:
        build:
            context: ml_predict/
        command: "gunicorn --bind=0.0.0.0:8888 -k uvicorn.workers.UvicornWorker main:app"
        # command: "uvicorn main:app --host 0.0.0.0 --port 8888 --reload"
        ports:
            - "8888:8888"
        # volumes:
        #     - type: bind
        #       source: ${PWD}/ml_predict/
        #       target: /app
        networks:
            - stock_network


    # pgadmin:
    #     image: dpage/pgadmin4
    #     environment:
    #         PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-user@email.com}
    #         PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-user}
    #     ports:
    #         - "5050:80"
    #     volumes:
    #         - pgadmin:/root/.pgadmin
    #     networks:
    #         - stock_network

volumes:
    pgdata:
    pgadmin:
    mlmodel_vol:

networks:
    stock_network:
        driver: bridge
